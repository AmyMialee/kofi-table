plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
apply plugin: 'com.github.johnrengelman.shadow'

version = project.mod_version
group = project.maven_group

configurations {
    shadowCommon
}

repositories {}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation(shadowCommon('com.electronwill.night-config:toml:3.6.5'))
    testCompileOnly 'com.electronwill.night-config:toml:3.6.5'
}


shadowJar {
    relocate 'com.electronwill.nightconfig', "at.petrak.relocated.nightconfig"

    archiveClassifier = 'shadow'
    configurations = [project.configurations.shadowCommon]
}

remapJar {
    dependsOn(shadowJar)
    inputFile.set(shadowJar.archiveFile)
    archiveClassifier = ''

    from rootProject.file("LICENSE.md")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "willBlRepositoryReleases"
            url = "https://maven.willbl.dev/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}